import Head from 'next/head'
import Recipe from "../../models/Recipe"
import Link from 'next/link'
import { GetServerSideProps } from 'next'
import dbConnect from "../../lib/dbConnect"

export default function RecipesList({recipes}) {
    return (
        <div>
            <Head>
            <title>All Recipes </title>
            <meta name="description" content="Generated by create next app" />
            </Head>
            <div className='m-5 w-96'>
              <form>   
                  <label htmlFor="default-search" className="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-gray-300">Search</label>
                  <div className="relative">
                      <div className="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                          <svg aria-hidden="true" className="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
                      </div>
                      <input type="search" id="default-search" className="block p-4 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search you favorite meal!"/>
                  </div>
              </form>
            </div>

            <div>
                {recipes.map((r, i) => (
                  <div className='p-5 m-5 bg-white flex max-w-md rounded-md'>
                    <Link href={`/recipes/${r._id}`} className="p-2 text-blue rounded-l-lg">
                      <div>  
                        <a className="cursor-pointer font-semibold">{r.name}</a>
                        <td> {r.dificulty}</td>
                        </div>
                    </Link>
                    
                  </div>
                ))}
                
            </div>
        </div>
    )
}

export const getServerSideProps : GetServerSideProps = async () => {

    dbConnect();

    const results = await Recipe.find({}).lean();

    //To turn it into an string 
    const recipes = results.map(doc => ({
        ...doc,
        ...{_id: doc._id.toString()}

    }))

    // console.log(recipes)

    return {props: {recipes:recipes}}
}
