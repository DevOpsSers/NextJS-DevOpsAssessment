import Head from 'next/head'
import {PlusCircleIcon} from '@heroicons/react/24/outline'
import { useState } from 'react';
//import Alert from "../../components/Alert";
import { useMutation } from 'react-query';
import axios from "axios"

export default function RecipesIndex() {

    //tutorial: https://www.youtube.com/watch?v=pJiRj02PkJQ&ab_channel=TheNetNinja

    const [name, setName] = useState('');
    const [dificulty, setDificulty] = useState('easy');
    const [hours, setHours] = useState('');
    const [minutes, setMinutes] = useState('');
    const [categories, setCategories] = useState('');

    const [ingredient_amounts, setIngredientAmounts] = useState('');
    const [ingredient_units, setIngredientUnits] = useState('');
    const [ingredients, setIngredients] = useState('');

    const [n_people, setPeople] = useState('');

    const [step_title, setStepTitles] = useState('');
    const [step_content, setStepContents] = useState('');
    const [step_image, setStepImages] = useState('');


    const handleSubmit = (e) => {
        e.preventDefault();
    }

    function addCategory(){
        alert('hola')
    }

    return (
        <div>
            <Head>
            <title>All Recipes </title>
            <meta name="description" content="Generated by create next app" />
            </Head>
            
            <div className='p-5 m-5 bg-white flex max-w-md rounded'>
                <form onSubmit={handleSubmit}>
                    <h1 className='m-3 font-extrabold text-2xl text-rose-500'>Share Your Recipe!</h1>
                    <div className='m-3'>
                        <label htmlFor='user_name'><b>Name:</b></label>
                        <input 
                            type='text' 
                            className='rounded-lg ml-12' 
                            id='user_name' 
                            name='user_name' 
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                        />
                    </div>
                    <div className='m-3'>
                        <label htmlFor='dificulty'><b>Dificulty:</b></label>
                        <select name='dificulty' className='rounded-lg ml-8' id='dificulty'
                            value={dificulty}
                            onChange={(e) => setDificulty(e.target.value)}
                        >
                            <option value='easy'>Easy</option>
                            <option value='medium'>Medium</option>
                            <option value='hard'>Hard</option>
                        </select>
                    </div>
                    <div className='m-3'>
                        <label htmlFor='time'><b>Time:</b></label>
                        <div className='flex m-3'>
                          <input type='number' className='rounded-lg w-24' id='time_hours' name='time_hours' 
                            value={hours}
                            onChange={(e) => setHours(e.target.value)}
                          /><div className='m-2'>hours</div>
                          <input type='number' className='rounded-lg w-24' id='time_mins' name='time_mins'
                            value={minutes}
                            onChange={(e) => setMinutes(e.target.value)}
                          /><div className='m-2'>minutes</div>
                        </div>
                    </div>
                    <div className='m-3 my-6 flex'>
                        <label htmlFor='category[]'><b>Category:</b></label>
                        <input type='text' className='rounded-lg ml-6' name='category[]'
                            value={categories}
                            onChange={(e) => setCategories(e.target.value)}
                        ></input><PlusCircleIcon className="w-8 m-2 text-rose-500" onClick={addCategory}/>
                    </div>
                    <div className='m-3'>
                        <b>Ingredients:</b>
                        <div className='m-3 flex'>
                            <input type='number' className='rounded-lg my-2 mr-1 w-24' name='ingredient[]' placeholder='Amount'
                                value={ingredient_amounts}
                                onChange={(e) => setIngredientAmounts(e.target.value)}
                            ></input>
                            <select name='dificulty' className='rounded-lg  my-2 mr-1  w-24' id='dificulty'
                                value={ingredient_units}
                                onChange={(e) => setIngredientUnits(e.target.value)}
                            >
                                <option value={null}>Units</option>
                                <option value={'gr'}>Gr</option>
                                <option value={'ml'}>Ml</option>
                                <option value={'units'}>Units</option>
                                <option value={'cups'}>Cups</option>
                                <option value={'tea_spoon'}>Tea Spoon</option>
                                <option value={'any amount'}>Any Amount</option>
                            </select>
                            <input type='text' className='rounded-lg  my-2 mr-1  w-24' name='ingredient[]' placeholder='Ingredient'
                                value={ingredients}
                                onChange={(e) => setIngredients(e.target.value)}
                            ></input>
                            <PlusCircleIcon className="w-8 m-2 text-rose-500"/>
                        </div>
                    </div>
                    <div className='m-3 flex my-8'>
                        <label htmlFor='people' className='mt-2'><b>People:</b></label>
                        <input type='number' className='rounded-lg ml-5' id='people' name='people'
                            value={n_people}
                            onChange={(e) => setPeople(e.target.value)}
                        />
                    </div>
                    <div className='m-3'>
                        <b>Steps</b>
                        <div className='m-3'>
                            <div className='m-2'>
                                <label>Title:</label><input type='text' className='rounded-lg ml-6' name='category[]'
                                    value={step_title}
                                    onChange={(e) => setStepTitles(e.target.value)}
                                ></input>
                            </div>
                            <div className='m-2 mt-6 flex'>
                                <label>Content:</label><textarea className='rounded-lg ml-6'
                                    value={step_content}
                                    onChange={(e) => setStepContents(e.target.value)}
                                ></textarea>
                            </div>
                            <div className='m-2 flex'>
                                <div className="flex justify-center items-center w-full">
                                    <label htmlFor="dropzone-file" className="flex flex-col justify-center items-center w-full h-64 bg-rose-100 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-rose-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 mt-5">
                                        <div className="flex flex-col justify-center items-center pt-5 pb-6">
                                            <svg aria-hidden="true" className="mb-3 w-10 h-10 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg>
                                            <p className="mb-2 text-sm text-gray-500 dark:text-gray-400"><span className="font-semibold">Click to upload</span> or drag and drop</p>
                                            <p className="text-xs text-gray-500 dark:text-gray-400">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                                        </div>
                                        <input id="dropzone-file" type="file" className="hidden" 
                                            value={step_image}
                                            onChange={(e) => setStepImages(e.target.value)}
                                        />
                                    </label>
                                </div>
                            </div>
                            <div className='flex'>
                                <div className='mt-3 ml-10'>Add Step</div><PlusCircleIcon className="w-8 m-2 text-rose-500" />
                            </div>
                            
                            
                        </div>
                    </div>
                    

                    <input type="checkbox" className="rounded text-pink-500 ml-11 m-2"  /> I accept Terms & Conditions

                    <input className="w-full h-12 px-6 text-indigo-100 transition-colors duration-150 bg-rose-700 rounded-lg focus:shadow-outline hover:bg-rose-800" type='submit' value='Share Recipe!'></input> 
                </form>
                

                
            </div>
        </div>
        


    )
}